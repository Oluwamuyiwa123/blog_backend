name: Build Blog Backend

on: 
  push:
    branches:
        - main
        - portfolio

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repo 
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Install Dependencies
        run: pip install -r requirements.txt

      - name: log in to Dockerhub
        run: docker login -u ${{ vars.DOCKER_USERNAME}} -p ${{secrets.DOCKER_TOKEN}}

      - name: build Docker image
        run: |
          docker build -t blog_backend . 

      - name: tag image
        run: docker tag blog_backend:latest ${{vars.DOCKER_USERNAME}}/blog:${{github.sha}}

      - name: push image
        run: docker push ${{vars.DOCKER_USERNAME}}/blog:${{github.sha}}
     
  EC2-Deploy:
    runs-on: ubuntu latest
    needs: build
    steps:
      - name: checkout Repo
        uses: actions/checkout@v4
        
      - name: Build and Deploy
        env: 
             PRIVATE_KAY: ${{secret.SSH_PRIVATE_KEY}}  
             HOSTNAME: ${{secrets.SSH_HOST}}
             USER_NAME: ${{secrets.USER_NAME}}

          run:
            echo "$PRIVATE_KEY" > private_key && chmod 600 private_key
            ssh -o StrictHostKeyCheck=no -i private_key ${USER_NAME}@${HOST_NAME}
            docker run -d -p 8000:8000 ${{vars.DOCKER_USERNAME}}/blog:${{github.sha}}

      # - name: Extract Docker image metadata
      #   id: meta
      #   uses: docker/metadata-action@v5
      #   with:
      #       images: ${{ vars.DOCKER_USERNAME }}/blog

      # - name: Log in to Docker Hub
      #   uses: docker/login-action@v3
      #   with:
      #       username: ${{ vars.DOCKER_USERNAME }} 
      #       password: ${{ secrets.DOCKER_TOKEN }}     

      # - name: Set up Docker Buildx
      #   uses: docker/setup-buildx-action@v3
      
      # - name: Build and push Docker image
      #   uses: docker/build-push-action@v6
      #   with: 
      #       push: ${{ github.event_name != 'pull_request' }}
      #       tags: ${{ steps.meta.outputs.tags }}  
      #       annotations: ${{ steps.meta.outputs.annotations }}
      #       provenance: true
      #       sbom: true
